name: "Ruby on Rails CI"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t my_rails_app .

  test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: ruby:3.0.4 # Usar imagem oficial do Ruby 3.0.4 para os testes

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: my_test_database

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Bundler cache
        id: bundler-cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-

      - name: Bundle install
        run: |
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      - name: Run tests
        run: bundle exec rails test

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build  Docker image
        run: |
          docker build -t my_rails_app .

      - name: Run RuboCop
        run: docker run my_rails_app bundle exec rubocop
